<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yuy&#39;s blog</title>
  
  <subtitle>心有猛虎，细嗅蔷薇。</subtitle>
  <link href="https://syuy.top/atom.xml" rel="self"/>
  
  <link href="https://syuy.top/"/>
  <updated>2019-09-23T08:47:22.655Z</updated>
  <id>https://syuy.top/</id>
  
  <author>
    <name>yuy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>4.10模拟赛T2</title>
    <link href="https://syuy.top/2019/04/11/4.10%E6%A8%A1%E6%8B%9F%E8%B5%9BT2/"/>
    <id>https://syuy.top/2019/04/11/4.10%E6%A8%A1%E6%8B%9F%E8%B5%9BT2/</id>
    <published>2019-04-11T00:15:26.000Z</published>
    <updated>2019-09-23T08:47:22.655Z</updated>
    
    <content type="html"><![CDATA[<p>T2（矩阵快速幂）:</p><p><a href="https://www.luogu.org/problemnew/show/P2151">Luogu点我！</a></p><p><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=1875">BZOJ点我！</a></p><span id="more"></span><p>T2:</p><p><a href="https://imgchr.com/i/A7MAd1"><img src="https://s2.ax1x.com/2019/04/11/A7MAd1.md.png" alt="A7MAd1.md.png"></a></p><p><img src="https://s2.ax1x.com/2019/04/11/A7MSRU.png" alt="A7MSRU.png"></p><p>数据范围就是矩阵快速幂不解释。</p><p>这题与<a href="https://www.luogu.org/problemnew/show/P4159">P4159 [SCOI2009]迷路</a>很类似，就是多了限制条件，也少了一些条件。</p><p>少了是边的权值变得只有1这一种权值。</p><p>多了不能 A-&gt;B-&gt;A 这种的走法。</p><p>如果没有限制走法，那么就是裸矩阵快速幂，只要将每个点看做矩阵上的元素，进行矩阵幂运算即可。</p><h1 id="ft-i-j-sum-k-1-n-f-t-1-i-k-times-f-t-1-k-j"><a href="#ft-i-j-sum-k-1-n-f-t-1-i-k-times-f-t-1-k-j" class="headerlink" title="$ ft[i][j] = \sum{k=1}^{n} f{t-1}[i][k] \times f{t-1}[k][j]$"></a>$ f<em>t[i][j] = \sum</em>{k=1}^{n} f<em>{t-1}[i][k] \times f</em>{t-1}[k][j]$</h1><p>也就是裸的矩阵乘法。</p><p>但是限制了一条边走过之后不能立马走回来。</p><p>那只要将矩阵中的点换成边即可:</p><h1 id="f-i-i-j-表示从-第i条边的起点-走到-第j条边的终点的方案数。"><a href="#f-i-i-j-表示从-第i条边的起点-走到-第j条边的终点的方案数。" class="headerlink" title="$f_i[i][j]$ 表示从 第i条边的起点 走到 第j条边的终点的方案数。"></a>$f_i[i][j]$ 表示从 第i条边的起点 走到 第j条边的终点的方案数。</h1><p>那就可以解决这个问题了。</p><p>upd:</p><h3 id="问：为什么第65行的地方需要建立一条虚边？"><a href="#问：为什么第65行的地方需要建立一条虚边？" class="headerlink" title="问：为什么第65行的地方需要建立一条虚边？"></a>问：为什么第65行的地方需要建立一条虚边？</h3><h3 id="答：因为否则最终统计答案的时候不能确定从哪一条边的起点到终点的方案数了。"><a href="#答：因为否则最终统计答案的时候不能确定从哪一条边的起点到终点的方案数了。" class="headerlink" title="答：因为否则最终统计答案的时候不能确定从哪一条边的起点到终点的方案数了。"></a>答：因为否则最终统计答案的时候不能确定从哪一条边的起点到终点的方案数了。</h3><h3 id="Code"><a href="#Code" class="headerlink" title="Code:"></a>Code:</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> R register</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Set(s,v) memset(s,v,sizeof(s))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LL ans=<span class="number">0</span>,f=<span class="number">1</span>;<span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)&#123;f=<span class="number">-1</span>;&#125;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;ans=(ans&lt;&lt;<span class="number">3</span>)+(ans&lt;&lt;<span class="number">1</span>)+(ch<span class="number">-48</span>);ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">return</span> ans*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">write</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;<span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);x=-x;&#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)&#123;<span class="built_in">write</span>(x/<span class="number">10</span>);&#125;</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>|<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD=<span class="number">45989</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">mat</span>&#123;</span><br><span class="line">    LL x[<span class="number">155</span>][<span class="number">155</span>];</span><br><span class="line">&#125;s,f;</span><br><span class="line">LL ans;</span><br><span class="line"><span class="type">int</span> n,m,t,st,ed;</span><br><span class="line"><span class="type">int</span> x[<span class="number">128</span>],y[<span class="number">128</span>],cnt;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">debug</span><span class="params">(mat x)</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;DEBUG:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,x.x[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">mat <span class="title">mul</span><span class="params">(mat A,mat B)</span></span>&#123;</span><br><span class="line">    mat res;</span><br><span class="line">    <span class="built_in">Set</span>(res.x,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (R <span class="type">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (R <span class="type">int</span> k=<span class="number">1</span>;k&lt;=cnt;++k)</span><br><span class="line">            <span class="keyword">if</span>(A.x[i][k])&#123;</span><br><span class="line">                <span class="keyword">for</span> (R <span class="type">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j)&#123;</span><br><span class="line">                    res.x[i][j]=res.x[i][j]+(A.x[i][k]*B.x[k][j])%MOD;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">for</span> (R <span class="type">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j) res.x[i][j]%=MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">mat <span class="title">mksm</span><span class="params">(mat a,LL b)</span></span>&#123;</span><br><span class="line">    mat res=s,base=a;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            res=<span class="built_in">mul</span>(res,base);</span><br><span class="line">        &#125;</span><br><span class="line">        base=<span class="built_in">mul</span>(base,base);</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;desire.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;desire.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line">    n=<span class="built_in">read</span>();m=<span class="built_in">read</span>();t=<span class="built_in">read</span>();st=<span class="built_in">read</span>();ed=<span class="built_in">read</span>();</span><br><span class="line">    ++st;++ed;</span><br><span class="line">    ++cnt;x[cnt]=<span class="number">0</span>;y[cnt]=st;</span><br><span class="line">    <span class="keyword">for</span> (R <span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">        <span class="type">int</span> u=<span class="built_in">read</span>(),v=<span class="built_in">read</span>();</span><br><span class="line">        ++u,++v;</span><br><span class="line">        ++cnt;x[cnt]=u;y[cnt]=v;</span><br><span class="line">        ++cnt;x[cnt]=v;y[cnt]=u;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (R <span class="type">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)&#123;</span><br><span class="line">        s.x[i][i]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (R <span class="type">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (R <span class="type">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==j||i==(j^<span class="number">1</span>)||y[i]!=x[j])&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                f.x[i][j]=<span class="number">1</span>;<span class="comment">//从标号为i的边的起点走到标号为j的边的终点的方案数。 </span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    printf(&quot;!!%d\n&quot;,cnt);</span></span><br><span class="line"><span class="comment">//    debug(f);</span></span><br><span class="line"><span class="comment">//    getchar();</span></span><br><span class="line">    f=<span class="built_in">mksm</span>(f,t);</span><br><span class="line">    <span class="keyword">for</span> (R <span class="type">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(y[i]==ed)&#123;</span><br><span class="line">            ans=(ans+f.x[<span class="number">1</span>][i])%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">write</span>(ans);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;T2（矩阵快速幂）:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P2151&quot;&gt;Luogu点我！&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.lydsy.com/JudgeOnline/problem.php?id=1875&quot;&gt;BZOJ点我！&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>BZOJ：2721: [Violet 5]樱花</title>
    <link href="https://syuy.top/2019/04/02/2721%20[Violet%205]%E6%A8%B1%E8%8A%B1/"/>
    <id>https://syuy.top/2019/04/02/2721%20[Violet%205]%E6%A8%B1%E8%8A%B1/</id>
    <published>2019-04-02T12:24:00.000Z</published>
    <updated>2019-09-23T08:47:33.187Z</updated>
    
    <content type="html"><![CDATA[<p><del>数论好题</del></p><p><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=2721">2721: [Violet 5]樱花</a></p><span id="more"></span><p><img src="https://s2.ax1x.com/2019/04/02/A6OCvQ.gif" alt="A6OCvQ.gif"></p><h3 id="简化版"><a href="#简化版" class="headerlink" title="简化版:"></a>简化版:</h3><p>求方程 $ \dfrac{1}{X}+\dfrac{1}{Y}= \dfrac{1}{N!}$ 的正整数解的组数，其中 $ N≤10^6 $ 。</p><p>解的组数，应模$1e9+7$。</p><h2 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h2><p><img src="https://s2.ax1x.com/2019/04/02/A6OSC8.gif" alt="A6OSC8.gif"></p><h2 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h2><p><img src="https://s2.ax1x.com/2019/04/02/A6O9gg.gif" alt="A6O9gg.gif"></p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h2><p>$1439$</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h2><p>$102426508$</p><h2 id="HINT"><a href="#HINT" class="headerlink" title="HINT:"></a>HINT:</h2><p><img src="https://s2.ax1x.com/2019/04/02/A6Op8S.gif" alt="A6Op8S.gif"></p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><h4 id="STEP1"><a href="#STEP1" class="headerlink" title="STEP1:"></a>STEP1:</h4><p>尝试化简该式子？</p><p>可以注意到 $X&gt;N!$</p><p>那么可以设 $X = (N!+a)$</p><p>代入原式得:</p><p>$\dfrac{1}{N!+a}+\dfrac{1}{Y}= \dfrac{1}{N!}$</p><p>通分:</p><p>$Y×N!+N!\times(N!+a)=Y×(N!+a)$</p><p>化简:</p><p>$(N!)^2+aN!=aY$</p><p>$Y=\dfrac{(N!)^2}{a}+N!$</p><p>$a|(N!)^2$ 时$Y$为整数。</p><p>任意一个能整除$(N!)^2$的$a$可以确定一个$Y$从而确定$X$也就是该 $ \dfrac{1}{X}+\dfrac{1}{Y}= \dfrac{1}{N!}$方程的一组解。</p><p>$∴$ 答案就是$(N!)^2$的约数个数。</p><h4 id="STEP2"><a href="#STEP2" class="headerlink" title="STEP2:"></a>STEP2:</h4><p>但是如何求$(N!)^2$的约数个数？</p><p>根据算数基本定理的推论：</p><p>$(c<em>1+1)×(c_2+1)×…×(c_m+1)=\prod</em>{i=1}^{m}(c_i+1)$</p><p>$c_i$是分解出质因数的指数。</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">0</span>,f=<span class="number">1</span>;<span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)&#123;f=<span class="number">-1</span>;&#125;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;ans=ans*<span class="number">10</span>+ch<span class="number">-48</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">return</span> ans*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">write</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;<span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);x=-x;&#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)&#123;<span class="built_in">write</span>(x/<span class="number">10</span>);&#125;</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>|<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> cnt,prime[N+<span class="number">5</span>];</span><br><span class="line"><span class="type">bool</span> book[N+<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">getprime</span><span class="params">()</span></span>&#123;</span><br><span class="line">    book[<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!book[i])&#123;</span><br><span class="line">            prime[++cnt]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=cnt;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i*prime[j]&gt;N)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            book[i*prime[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ct[N+<span class="number">5</span>];</span><br><span class="line">ll ans=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=<span class="built_in">read</span>();</span><br><span class="line">    <span class="built_in">getprime</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k=<span class="number">2</span>;k&lt;=n;k++)&#123;</span><br><span class="line">        <span class="type">int</span> t=k;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=cnt &amp;&amp; prime[i]*prime[i]&lt;=t;i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>(t%prime[i]==<span class="number">0</span>)&#123;</span><br><span class="line">                ct[prime[i]]++;</span><br><span class="line">                t/=prime[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(t&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            ct[t]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)&#123;</span><br><span class="line">        ct[prime[i]]*=<span class="number">2</span>;</span><br><span class="line">        ct[prime[i]]%=MOD;</span><br><span class="line">        ans=(ans*(ct[prime[i]]+<span class="number">1</span>))%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">write</span>(ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;del&gt;数论好题&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.lydsy.com/JudgeOnline/problem.php?id=2721&quot;&gt;2721: [Violet 5]樱花&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://syuy.top/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="数论" scheme="https://syuy.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>P3197 [HNOI2008]越狱</title>
    <link href="https://syuy.top/2019/03/29/luoguP3197/"/>
    <id>https://syuy.top/2019/03/29/luoguP3197/</id>
    <published>2019-03-29T12:36:00.000Z</published>
    <updated>2019-09-23T08:47:55.671Z</updated>
    
    <content type="html"><![CDATA[<h4 id="水一篇数论题解"><a href="#水一篇数论题解" class="headerlink" title="水一篇数论题解"></a><del>水一篇数论题解</del></h4><span id="more"></span><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h2 id="P3197-HNOI2008-越狱"><a href="#P3197-HNOI2008-越狱" class="headerlink" title="P3197 [HNOI2008]越狱"></a><a href="https://www.luogu.org/problemnew/show/P3197">P3197 [HNOI2008]越狱</a></h2><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>监狱有连续编号为 $1…N$ 的 $N$ 个房间，每个房间关押一个犯人，有 $M$ 种宗教，每个犯人可能信仰其中一种。如果相邻房间的犯人的宗教相同，就可能发生越狱，求有多少种状态可能发生越狱。</p><h2 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h2><p>输入格式：</p><p>输入两个整数 $M,N$</p><p>输出格式：</p><p>可能越狱的状态数，模 $100003$ 取余</p><h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><p>输入样例#1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 3</span><br></pre></td></tr></table></figure><p>输出样例#1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>开始做这题是顺推，不太好想。</p><p>尝试反推。</p><h4 id="可能发生越狱状态-全部状态-不可能发生越狱状态"><a href="#可能发生越狱状态-全部状态-不可能发生越狱状态" class="headerlink" title="可能发生越狱状态 = 全部状态-不可能发生越狱状态"></a>可能发生越狱状态 = 全部状态-不可能发生越狱状态</h4><p>于是问题变得清晰起来。</p><p>全部状态就是: $M^N$ (乘法原理)</p><p>而不可能发生越狱的状态就是: $M*(M-1) ^ {N-1}$(乘法原理)</p><h5 id="取余后相减也许为负数所以对答案加上模数后再取模一次。"><a href="#取余后相减也许为负数所以对答案加上模数后再取模一次。" class="headerlink" title="取余后相减也许为负数所以对答案加上模数后再取模一次。"></a>取余后相减也许为负数所以对答案加上模数后再取模一次。</h5><p>$(((ksm(m,n)-(m*ksm(m-1,n-1)))%MOD+MOD)%MOD)$</p><p>使用快速幂计算幂次即可。</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">0</span>,f=<span class="number">1</span>;<span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)&#123;f=<span class="number">-1</span>;&#125;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;ans=ans*<span class="number">10</span>+ch<span class="number">-48</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">return</span> ans*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">write</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;<span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);x=-x;&#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)&#123;<span class="built_in">write</span>(x/<span class="number">10</span>);&#125;</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>|<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD=<span class="number">100003</span>;</span><br><span class="line">ll m,n;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ksm</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>,base=a;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            ans=(ans*base)%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        base=(base*base)%MOD;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    m=<span class="built_in">read</span>();</span><br><span class="line">    n=<span class="built_in">read</span>();</span><br><span class="line">    <span class="built_in">write</span>(((<span class="built_in">ksm</span>(m,n)-(m*<span class="built_in">ksm</span>(m<span class="number">-1</span>,n<span class="number">-1</span>)))%MOD+MOD)%MOD);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;水一篇数论题解&quot;&gt;&lt;a href=&quot;#水一篇数论题解&quot; class=&quot;headerlink&quot; title=&quot;水一篇数论题解&quot;&gt;&lt;/a&gt;&lt;del&gt;水一篇数论题解&lt;/del&gt;&lt;/h4&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://syuy.top/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="数论" scheme="https://syuy.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>3.20模拟赛(T3)&amp;set容器的使用</title>
    <link href="https://syuy.top/2019/03/21/3.20%E6%A8%A1%E6%8B%9F%E8%B5%9BT3/"/>
    <id>https://syuy.top/2019/03/21/3.20%E6%A8%A1%E6%8B%9F%E8%B5%9BT3/</id>
    <published>2019-03-21T00:59:38.000Z</published>
    <updated>2019-09-23T08:44:35.182Z</updated>
    
    <content type="html"><![CDATA[<p><em>set 是 STL 中一种标准关联容器。它底层使用平衡的搜索树——红黑树实现，插入删除操作时仅仅需要指针操作节点即可完成，不涉及到内存移动和拷贝，所以效率比较高。set，顾名思义是“集合”的意思，在 set 中元素都是唯一的，而且默认情况下会对元素自动进行升序排列，支持集合的交(set_intersection),差(set_difference) 并(set_union)，对称差(set_symmetric_difference) 等一些集合上的操作，如果需要集合中的元素允许重复那么可以使用 multiset。</em></p><span id="more"></span><p>这题考了STL的使用——set。</p><h3 id="T3-踮脚顾盼梨园"><a href="#T3-踮脚顾盼梨园" class="headerlink" title="T3 踮脚顾盼梨园"></a>T3 踮脚顾盼梨园</h3><p><img src="https://s2.ax1x.com/2019/03/21/A1kiTA.png" alt="A1kiTA.png"></p><h3 id="set-的常用操作"><a href="#set-的常用操作" class="headerlink" title="set 的常用操作"></a>set 的常用操作</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//头文件</span></span><br><span class="line">    <span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义</span></span><br><span class="line">    set&lt;<span class="type">int</span>&gt; S;<span class="comment">//定义一个set</span></span><br><span class="line">    set&lt;<span class="type">int</span>&gt;::iterator it<span class="comment">//定义一个迭代器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//插入</span></span><br><span class="line">    S.<span class="built_in">inster</span>(<span class="number">2</span>);<span class="comment">//插入元素2</span></span><br><span class="line">    S.<span class="built_in">inster</span>(<span class="number">1</span>);<span class="comment">//插入元素1</span></span><br><span class="line">    S.<span class="built_in">inster</span>(<span class="number">3</span>);<span class="comment">//插入元素3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除</span></span><br><span class="line">    <span class="comment">//删去集合里的元素:3</span></span><br><span class="line">        it=S.<span class="built_in">find</span>(<span class="number">3</span>);</span><br><span class="line">        S.<span class="built_in">erase</span>(it);</span><br><span class="line">        <span class="comment">//S.erase(3); 也可以直接这么删除元素:3</span></span><br><span class="line">    <span class="comment">//清空容器</span></span><br><span class="line">        S.<span class="built_in">clear</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改</span></span><br><span class="line">    <span class="comment">//修改就是删除再插入。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//查找</span></span><br><span class="line">    <span class="comment">//查找2这个元素</span></span><br><span class="line">        S.<span class="built_in">find</span>(<span class="number">2</span>);<span class="comment">//返回为一个迭代器,若找不到则返回S.end()</span></span><br><span class="line">    <span class="comment">//输出集合内元素</span></span><br><span class="line">        <span class="keyword">for</span> (it=S.<span class="built_in">begin</span>();it!=S.end;++it)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,*it);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//其他</span></span><br><span class="line">    <span class="comment">//判断集合是否为空</span></span><br><span class="line">        S.<span class="built_in">empty</span>();</span><br><span class="line">    <span class="comment">//输出集合内元素个数</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,S.<span class="built_in">size</span>());</span><br><span class="line">    <span class="comment">//返回第一个大于或等于给定关键值的元素</span></span><br><span class="line">        s.<span class="built_in">lower_bound</span>();</span><br><span class="line">    <span class="comment">//返回第一个大于给定关键值的元素</span></span><br><span class="line">        s.<span class="built_in">upper_bound</span>();</span><br></pre></td></tr></table></figure><p>本题代码。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll ans=<span class="number">0</span>,f=<span class="number">1</span>;<span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>) &#123;<span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>) &#123;f=<span class="number">-1</span>;&#125;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>) &#123;ans=ans*<span class="number">10</span>+ch<span class="number">-48</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">return</span> ans*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">write</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;<span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);x=-x;&#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)&#123;<span class="built_in">write</span>(x/<span class="number">10</span>);&#125;</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>|<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> &lt;(<span class="type">const</span> node &amp;oth)<span class="type">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> r&lt;oth.l;<span class="comment">//重载小于号为右端点与左端点的大小关系 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">set&lt;node&gt; S; <span class="comment">//&quot;set&quot;容器，为集合，实现方式为红黑树,是一种自平衡二叉查找树。它的查找，删除，插入时间为O(log n) </span></span><br><span class="line">set&lt;node&gt;::iterator it;<span class="comment">//iterator迭代器，用来访问set容器 </span></span><br><span class="line"><span class="type">char</span> opt;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;shi.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;shi.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line">    n=<span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot; %c&quot;</span>,&amp;opt);</span><br><span class="line">        <span class="keyword">if</span>(opt==<span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">            <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> l=<span class="built_in">read</span>(),r=<span class="built_in">read</span>();<span class="comment">//区间长度 </span></span><br><span class="line">            node temp=(node)&#123;</span><br><span class="line">                l,r</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">for</span> (it=S.<span class="built_in">find</span>(temp);it!=S.<span class="built_in">end</span>();it=S.<span class="built_in">find</span>(temp))&#123;<span class="comment">//find函数用于返回一个迭代器，当这个元素与temp这个元素重合时，若为空返回容器末尾迭代器&#x27;S.end&#x27; </span></span><br><span class="line">                S.<span class="built_in">erase</span>(it);<span class="comment">//弹出该元素 </span></span><br><span class="line">                ans++;<span class="comment">//统计弹出元素数量 </span></span><br><span class="line">            &#125;</span><br><span class="line">            S.<span class="built_in">insert</span>(temp);<span class="comment">//插入该元素 </span></span><br><span class="line">            <span class="built_in">write</span>(ans);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">write</span>(S.<span class="built_in">size</span>());<span class="comment">//S.size为该容器内元素个数。 </span></span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;em&gt;set 是 STL 中一种标准关联容器。它底层使用平衡的搜索树——红黑树实现，插入删除操作时仅仅需要指针操作节点即可完成，不涉及到内存移动和拷贝，所以效率比较高。set，顾名思义是“集合”的意思，在 set 中元素都是唯一的，而且默认情况下会对元素自动进行升序排列，支持集合的交(set_intersection),差(set_difference) 并(set_union)，对称差(set_symmetric_difference) 等一些集合上的操作，如果需要集合中的元素允许重复那么可以使用 multiset。&lt;/em&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://syuy.top/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="模拟赛" scheme="https://syuy.top/tags/%E6%A8%A1%E6%8B%9F%E8%B5%9B/"/>
    
    <category term="小结" scheme="https://syuy.top/tags/%E5%B0%8F%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>叁月拾日</title>
    <link href="https://syuy.top/2019/03/10/diary3.10/"/>
    <id>https://syuy.top/2019/03/10/diary3.10/</id>
    <published>2019-03-10T13:20:34.000Z</published>
    <updated>2019-09-23T08:48:16.464Z</updated>
    
    <content type="html"><![CDATA[<p>今天是周日（怎么又是在学校里的周日啊！）<br><span id="more"></span><br>周六的时候出乎意外。。妈妈居然来绍兴看我了？！好像是因为哥哥来绍兴有事所以顺道来看一下我。<br>但是那会儿我到外面去吃晚饭去了，他们没见到我，就放了两箱牛奶（目前4箱）就去办事了。<br>早饭吃了拌面（某师傅）<br>午饭吃的黄焖鸡面<br>晚饭吃的兰州拉面<br>一日三餐都是面也是没谁了！<br>下午的时候自己去打了一会儿篮球，然后去操场走了一会儿，学校是真的空啊。。<br>现在21:24<br>马上又回寝室了。<br>但是今天似乎忘记了吃药。。明天可不能忘了吃药。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天是周日（怎么又是在学校里的周日啊！）&lt;br&gt;</summary>
    
    
    
    
    <category term="生活" scheme="https://syuy.top/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="随笔" scheme="https://syuy.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>题解 P3382 【【模板】三分法】(粒子群优化)</title>
    <link href="https://syuy.top/2019/02/14/luoguP3328/"/>
    <id>https://syuy.top/2019/02/14/luoguP3328/</id>
    <published>2019-02-14T12:31:59.000Z</published>
    <updated>2019-09-23T08:48:07.424Z</updated>
    
    <content type="html"><![CDATA[<h3 id="粒子群优化（Particle-Swarm-Optimization-PSO），又称微粒群算法"><a href="#粒子群优化（Particle-Swarm-Optimization-PSO），又称微粒群算法" class="headerlink" title="粒子群优化（Particle Swarm Optimization,PSO），又称微粒群算法"></a>粒子群优化（Particle Swarm Optimization,PSO），又称微粒群算法</h3><span id="more"></span><h4 id="其重要的迭代用的公式是这条"><a href="#其重要的迭代用的公式是这条" class="headerlink" title="其重要的迭代用的公式是这条:"></a>其重要的迭代用的公式是这条:</h4><h2 id="v-i-v-i×w-c×rand-×-pbest-i-gbest-2×x-i"><a href="#v-i-v-i×w-c×rand-×-pbest-i-gbest-2×x-i" class="headerlink" title="$v_i=v_i×w+c×rand()×(pbest_i+gbest- 2×x_i)$"></a>$v_i=v_i×w+c×rand()×(pbest_i+gbest- 2×x_i)$</h2><p>其中：</p><p>$v_i$是速度</p><p>$w$是惯性因子((0,1)的实数)，和学习因子相反，就是该粒子原来的速度的 <strong>参考权重</strong> 。比如我的这个程序里取的是0.5，而据说从大到小衰减会更好。因为大的时候会重视每个<strong>个体的价值</strong>，可以更全面的寻找可行解，而越趋于0就越注重<strong>社会的价值</strong>就是所有粒子中的最优解。</p><p>$C$是学习因子也就是权重一般取$2$。</p><p>我们可以通过这个速度向量来更新位置。</p><p>$ b[a].x += b[a].v; $</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p><em>PSO算法是基于群体的，根据对环境的适应度将群体中的个体移动到好的区域。然而它不对个体使用演化算子，而是将每个个体看作是D维搜索空间中的一个没有体积的微粒（点），在搜索空间中以一定的速度飞行，这个速度根据它本身的飞行经验和同伴的飞行经验来动态调整。第i个微粒表示为Xi= （xi1, xi2, …, xiD），它经历过的最好位置（有最好的适应值）记为Pi= （pi1, pi2, …, piD），也称为pbest。在群体所有微粒经历过的最好位置的索引号用符号g表示，即Pg，也称为gbest。微粒i的速度用Vi= （vi1, vi2, …, viD）表示。</em></p><p>引用自<a href="https://baike.baidu.com/item/%E7%B2%92%E5%AD%90%E7%BE%A4%E4%BC%98%E5%8C%96/1352052?fr=aladdin">百度百科</a></p><h4 id="粒子群优化算法流程图："><a href="#粒子群优化算法流程图：" class="headerlink" title="粒子群优化算法流程图："></a>粒子群优化算法流程图：</h4><p><img src="https://s2.ax1x.com/2019/02/14/kBtFJA.png" alt=""></p><h4 id="所以"><a href="#所以" class="headerlink" title="所以"></a>所以</h4><p>对于这道题目我们先初始化他个$ 100 $个粒子，随机地在$ \begin{bmatrix}l,r\end{bmatrix} $区间里取x值，接着计算一下这个值对应的函数值且记录一下全局最优（更新时要用到）。</p><p>然后通过公式迭代他个$ 100 $次。</p><p>那就可以得到答案了。</p><h4 id="一些更详细的内容都写在了代码里了。"><a href="#一些更详细的内容都写在了代码里了。" class="headerlink" title="一些更详细的内容都写在了代码里了。"></a>一些更详细的内容都写在了代码里了。</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> cnt=<span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">double</span> xs[<span class="number">15</span>];<span class="comment">//系数</span></span><br><span class="line"><span class="type">double</span> l,r;<span class="comment">//x的范围</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">f</span><span class="params">(<span class="type">double</span> x)</span> </span>&#123;<span class="comment">//计算函数值</span></span><br><span class="line">    <span class="type">double</span> y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=n+<span class="number">1</span>; i&gt;=<span class="number">1</span>; i--) &#123;</span><br><span class="line">        y+=xs[n-i+<span class="number">2</span>]*<span class="built_in">pow</span>(x,i<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Rand</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">double</span>)<span class="built_in">rand</span>()/RAND_MAX;<span class="comment">//返回一个[0,1]的随机实数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">double</span> xv,x,y,besty,bestx;</span><br><span class="line">&#125; b[<span class="number">105</span>];</span><br><span class="line"><span class="comment">//xv是速度向量，x是位置，y是当前位置的函数值，besty是该粒子历史最优值，bestx是该粒子历史最优值时的x的值</span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> by=<span class="number">-1e233</span>,bx;</span><br><span class="line"><span class="comment">//by是全局当前最优值，bbx是取到全局最优值时的自变量x</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> a)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//更新速度向量</span></span><br><span class="line">    <span class="comment">//速度向量  惯性                 全局最优 局部最优  当前位置</span></span><br><span class="line">    b[a].xv=b[a].xv*<span class="number">0.5</span>+<span class="built_in">Rand</span>()*<span class="number">2</span>*(bx+b[a].bestx-b[a].x*<span class="number">2</span>);<span class="comment">//更新公式</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过速度向量更新位置</span></span><br><span class="line">    b[a].x+=b[a].xv;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//位置出界处理           速度向量方向反转</span></span><br><span class="line">    <span class="keyword">if</span> (b[a].x&lt;l) b[a].x=l,b[a].xv=b[a].xv*<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (b[a].x&gt;r) b[a].x=r,b[a].xv=b[a].xv*<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    b[a].y=<span class="built_in">f</span>(b[a].x);     <span class="comment">//计算当前位置函数值</span></span><br><span class="line">    <span class="keyword">if</span> (b[a].y&gt;b[a].besty) &#123; <span class="comment">//更新局部最优解</span></span><br><span class="line">        b[a].bestx=b[a].x;</span><br><span class="line">        b[a].besty=b[a].y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%lf%lf&quot;</span>,&amp;n,&amp;l,&amp;r);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n+<span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;xs[i]);<span class="comment">//读入系数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">srand</span>(xs[<span class="number">1</span>]+xs[n]);</span><br><span class="line">    <span class="comment">//生成粒子</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;=cnt; i++) &#123;</span><br><span class="line">        <span class="comment">//xv是速度向量，x是位置，y是当前位置的函数值，besty是该粒子历史最优值，bestx是该粒子历史最优值时的x的值</span></span><br><span class="line">        b[i].x=b[i].bestx=l+<span class="built_in">Rand</span>()*(r-l);<span class="comment">//初始x的值 为 l~r 的一个实数</span></span><br><span class="line">        b[i].xv=<span class="number">0</span>;        <span class="comment">//速度向量初始化为0</span></span><br><span class="line">        b[i].y=b[i].besty=<span class="built_in">f</span>(b[i].x);    <span class="comment">//计算当前函数值</span></span><br><span class="line">        <span class="keyword">if</span> (by&lt;b[i].y) &#123; <span class="comment">//若当前函数值优于全局最优函数值则更新全局最优</span></span><br><span class="line">            bx=b[i].bestx;</span><br><span class="line">            by=b[i].besty;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//开始迭代</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k=<span class="number">1</span>; k&lt;=<span class="number">100</span>; k++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;=cnt; i++) &#123;</span><br><span class="line">            <span class="comment">//对每个粒子速度和位置更新</span></span><br><span class="line">            <span class="built_in">update</span>(i);</span><br><span class="line">            <span class="keyword">if</span> (by&lt;b[i].besty) &#123;</span><br><span class="line">                <span class="comment">//更新全局最优解</span></span><br><span class="line">                bx=b[i].bestx;</span><br><span class="line">                by=b[i].besty;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.5lf\n&quot;</span>,bx);<span class="comment">//全局最优的x的值即为答案</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;粒子群优化（Particle-Swarm-Optimization-PSO），又称微粒群算法&quot;&gt;&lt;a href=&quot;#粒子群优化（Particle-Swarm-Optimization-PSO），又称微粒群算法&quot; class=&quot;headerlink&quot; title=&quot;粒子群优化（Particle Swarm Optimization,PSO），又称微粒群算法&quot;&gt;&lt;/a&gt;粒子群优化（Particle Swarm Optimization,PSO），又称微粒群算法&lt;/h3&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://syuy.top/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="粒子群优化" scheme="https://syuy.top/tags/%E7%B2%92%E5%AD%90%E7%BE%A4%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>题解 P1429 【平面最近点对（加强版）】</title>
    <link href="https://syuy.top/2019/01/04/luoguP1429/"/>
    <id>https://syuy.top/2019/01/04/luoguP1429/</id>
    <published>2019-01-04T00:20:39.000Z</published>
    <updated>2019-09-23T08:47:46.371Z</updated>
    
    <content type="html"><![CDATA[<h3 id="随机旋转，按横坐标排序后枚举每个点与其后面5个点的距离取最小值更新答案-算法导论里有提到这个算法"><a href="#随机旋转，按横坐标排序后枚举每个点与其后面5个点的距离取最小值更新答案-算法导论里有提到这个算法" class="headerlink" title="随机旋转，按横坐标排序后枚举每个点与其后面5个点的距离取最小值更新答案(算法导论里有提到这个算法)"></a>随机旋转，按横坐标排序后枚举每个点与其后面5个点的距离取最小值更新答案(算法导论里有提到这个算法)</h3><span id="more"></span><h3 id="我这里随机旋转了两次（你想要转几次都行）"><a href="#我这里随机旋转了两次（你想要转几次都行）" class="headerlink" title="我这里随机旋转了两次（你想要转几次都行）"></a>我这里随机旋转了两次<del>（你想要转几次都行）</del></h3><h4 id="记得初始化数据不然排序后的后面几个数据会凑巧有几个点在（0-0）旁可能会把答案更新成与（0-0）之间的距离。"><a href="#记得初始化数据不然排序后的后面几个数据会凑巧有几个点在（0-0）旁可能会把答案更新成与（0-0）之间的距离。" class="headerlink" title="记得初始化数据不然排序后的后面几个数据会凑巧有几个点在（0,0）旁可能会把答案更新成与（0,0）之间的距离。"></a>记得初始化数据不然排序后的后面几个数据会凑巧有几个点在（0,0）旁可能会把答案更新成与（0,0）之间的距离。</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 9999999999.0</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">double</span> x,y;</span><br><span class="line">&#125;a[<span class="number">2000010</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">double</span> ans=INF;                <span class="comment">//初始化答案为一个很大的数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x&lt;b.x;            <span class="comment">//按照横坐标排序</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">len</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));<span class="comment">//计算两点之间距离</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">calc</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;=i+<span class="number">5</span>;j++)&#123;</span><br><span class="line">            <span class="type">double</span> temp;</span><br><span class="line">            temp=<span class="built_in">len</span>(a[i],a[j]);</span><br><span class="line">            ans=<span class="built_in">min</span>(ans,temp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">around</span><span class="params">(<span class="type">int</span> ds)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">double</span> x=a[i].x,y=a[i].y;<span class="comment">//旋转前的点</span></span><br><span class="line">        <span class="type">double</span> xn,yn;            <span class="comment">//旋转后的点</span></span><br><span class="line">        <span class="type">double</span> xyu=<span class="number">0.0</span>,yyu=<span class="number">0.0</span>;  <span class="comment">//原点</span></span><br><span class="line">        xn= (x - xyu)*<span class="built_in">cos</span>(ds) - (y - yyu)*<span class="built_in">sin</span>(ds) + xyu ;</span><br><span class="line">        yn= (x - xyu)*<span class="built_in">sin</span>(ds) + (y - yyu)*<span class="built_in">cos</span>(ds) + yyu ;</span><br><span class="line">        a[i].x=xn;</span><br><span class="line">        a[i].y=yn;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmp);        <span class="comment">//顺便排序</span></span><br><span class="line">    <span class="built_in">calc</span>();                        <span class="comment">//顺便计算</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="literal">NULL</span>));            <span class="comment">//随机数种子</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">200009</span>;i++)&#123;</span><br><span class="line">        a[i].x=INF;a[i].y=INF;    <span class="comment">//初始化</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf&quot;</span>,&amp;a[i].x,&amp;a[i].y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">around</span>(<span class="number">0</span>);                    <span class="comment">//将原图像进行排序并枚举每个点与其后五个点比较</span></span><br><span class="line">    <span class="built_in">around</span>(<span class="built_in">rand</span>()%<span class="number">360</span>);            <span class="comment">//将图像随机（0°~359°）旋转  并排序 并计算</span></span><br><span class="line">    <span class="built_in">around</span>(<span class="built_in">rand</span>()%<span class="number">360</span>);            <span class="comment">//将图像随机（0°~359°）旋转  并排序 并计算</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.4lf&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="旋转公式："><a href="#旋转公式：" class="headerlink" title="旋转公式："></a>旋转公式：</h3><h3 id="x-x1-x2-cos-θ-y1-y2-sin-θ-x2"><a href="#x-x1-x2-cos-θ-y1-y2-sin-θ-x2" class="headerlink" title="x= (x1 - x2)cos(θ) - (y1 - y2)sin(θ) + x2 ;"></a>x= (x1 - x2)<em>cos(θ) - (y1 - y2)</em>sin(θ) + x2 ;</h3><h3 id="y-x1-x2-sin-θ-y1-y2-cos-θ-y2"><a href="#y-x1-x2-sin-θ-y1-y2-cos-θ-y2" class="headerlink" title="y= (x1 - x2)sin(θ) + (y1 - y2)cos(θ) + y2 ;"></a>y= (x1 - x2)<em>sin(θ) + (y1 - y2)</em>cos(θ) + y2 ;</h3>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;随机旋转，按横坐标排序后枚举每个点与其后面5个点的距离取最小值更新答案-算法导论里有提到这个算法&quot;&gt;&lt;a href=&quot;#随机旋转，按横坐标排序后枚举每个点与其后面5个点的距离取最小值更新答案-算法导论里有提到这个算法&quot; class=&quot;headerlink&quot; title=&quot;随机旋转，按横坐标排序后枚举每个点与其后面5个点的距离取最小值更新答案(算法导论里有提到这个算法)&quot;&gt;&lt;/a&gt;随机旋转，按横坐标排序后枚举每个点与其后面5个点的距离取最小值更新答案(算法导论里有提到这个算法)&lt;/h3&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://syuy.top/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="排序" scheme="https://syuy.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
</feed>
